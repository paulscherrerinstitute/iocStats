#!/bin/bash

# Find all IOCs in the given facility
# Sort alphabetically, then sort by location and finally group by topic.

TEST='TEST|-GJ'
EXCLUDE='^S.*-[CL]CAM'

[ ${FACILITY:=${PSI_GFA_FACILITY:=SF}} == SF ] && FACILITY=SWISSFEL
[ $PSI_GFA_FACILITY == SLS ] && FILTER=AX || FILTER=${PSI_GFA_FACILITY:0:1}

#show a little dialog box
zenity --progress --pulsate --title "IOC status" --text "Collecting IOC information\nfrom Inventory ..." <<<1 &

ulimit -n 4096
caqtdm >/dev/null -noMsg -macro $(
    wget -q -O - "http://epics-boot-info.psi.ch/find-channel.aspx/%:TOD?limit=0&format=csv&header=no&facility=$FACILITY" | sort -V \
    | awk -F : -v exclude=$EXCLUDE -v filter=$FILTER '
exclude && $1~exclude { next }         
filter && $1!~"^[" filter "]" { print "filtered out: " $1 > "/dev/stderr"; next }         
        /^ACO/      { ACO = ACO $1 "\n"; next }
        /^ALI/      { ALI = ALI $1 "\n"; next }
        /^ALB/      { ALB = ALB $1 "\n"; next }
        /^ABO/      { ABO = ABO $1 "\n"; next }
        /^ABR/      { ABR = ABR $1 "\n"; next }
        /^ARI/      { ARI = ARI $1 "\n"; next }
        /^SLG/      { SLG = SLG $1 "\n"; next }
        /^SIN/      { SIN = SIN $1 "\n"; next }
        /^S[0-9]/   { SNN = SNN $1 "\n"; next }
        /^SAR/      { SAR = SAR $1 "\n"; next }
        /^SAT/      { SAT = SAT $1 "\n"; next }
        /^SGE/      { SGE = SGE $1 "\n"; next }
        /^SL/       { SL  = SL  $1 "\n"; next }
                    { OTH = OTH $1 "\n"; next }
        END { print ACO, ALI, ALB, ABO, ABR, ARI, SLG, SIN, SNN, SAR, SAT, SGE, SL, OTH }' \
    | awk -v test=$TEST '
        /^$/        { next }      
test && $1~test     { IOCS["TE"]=IOCS["TE"] "IOC=" $1 ";"; next}
        /-TS/       { IOCS["TS"]=IOCS["TS"] "IOC=" $1 ";"; next}
        /-ALCSYNC/  { IOCS["TS"]=IOCS["TS"] "IOC=" $1 ";"; next}
        /-SRX/      { IOCS["TS"]=IOCS["TS"] "IOC=" $1 ";"; next}
        /-TI/       { IOCS["TI"]=IOCS["TI"] "IOC=" $1 ";"; next}
        /CAM/       { IOCS["CA"]=IOCS["CA"] "IOC=" $1 ";"; next}
        /-LAS/      { IOCS["LA"]=IOCS["LA"] "IOC=" $1 ";"; next}
        /-VAC/      { IOCS["VA"]=IOCS["VA"] "IOC=" $1 ";"; next}
        /-.*-VM/    { IOCS["VA"]=IOCS["VA"] "IOC=" $1 ";"; next}
        /-VCS/      { IOCS["VA"]=IOCS["VA"] "IOC=" $1 ";"; next}
        /-MAG/      { IOCS["MA"]=IOCS["MA"] "IOC=" $1 ";"; next}
        /-LLRF/     { IOCS["LLRF"]=IOCS["LLRF"] "IOC=" $1 ";"; next}
        /-ILK/      { IOCS["LLRF"]=IOCS["LLRF"] "IOC=" $1 ";"; next}
        /-R/        { IOCS["RF"]=IOCS["RF"] "IOC=" $1 ";"; next}
        /-TFDB/     { IOCS["RF"]=IOCS["RF"] "IOC=" $1 ";"; next}
        /-MOT/      { IOCS["MO"]=IOCS["MO"] "IOC=" $1 ";"; next}
        /-DBLM/     { IOCS["DI"]=IOCS["DI"] "IOC=" $1 ";"; next}
        /-DBPM/     { IOCS["DI"]=IOCS["DI"] "IOC=" $1 ";"; next}
        /-DBCM/     { IOCS["DI"]=IOCS["DI"] "IOC=" $1 ";"; next}
        /-DBAM/     { IOCS["DI"]=IOCS["DI"] "IOC=" $1 ";"; next}
        /-DSCR/     { IOCS["DI"]=IOCS["DI"] "IOC=" $1 ";"; next}
        /-DDR/      { IOCS["DI"]=IOCS["DI"] "IOC=" $1 ";"; next}
        /-D/        { IOCS["DI"]=IOCS["DI"] "IOC=" $1 ";"; next}
        /-KKV/      { IOCS["KV"]=IOCS["KV"] "IOC=" $1 ";"; next}
        /-UIN/      { IOCS["ID"]=IOCS["ID"] "IOC=" $1 ";"; next}
        /-O/        { IOCS["OP"]=IOCS["OP"] "IOC=" $1 ";"; next}
        /-P/        { IOCS["PH"]=IOCS["PH"] "IOC=" $1 ";"; next}
        /^SLG/      { IOCS["LA"]=IOCS["LA"] "IOC=" $1 ";"; next}
        /^SLAAR/    { IOCS["LA"]=IOCS["LA"] "IOC=" $1 ";"; next}
        /^STS/      { IOCS["TS"]=IOCS["TS"] "IOC=" $1 ";"; next}
        /^SGE/      { IOCS["GE"]=IOCS["GE"] "IOC=" $1 ";"; next}
        /^SF-/      { IOCS["GE"]=IOCS["GE"] "IOC=" $1 ";"; next}
        /^SIN-/     { IOCS["GE"]=IOCS["GE"] "IOC=" $1 ";"; next}
        /^SARUN-/   { IOCS["ID"]=IOCS["ID"] "IOC=" $1 ";"; next}
                    { IOCS["OT"]=IOCS["OT"] "IOC=" $1 ";"; }
    END { for (i in IOCS) { printf ("%s_IOCS=%s,", i, IOCS[i]) }
}'; kill $!) iocStats_${PSI_GFA_FACILITY}_overview.ui
